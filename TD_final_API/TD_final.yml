openapi: 3.0.3
info:
  title: Football Match Management API
  version: 1.0.0
  description: API for managing football competitions, teams, and players.

servers:
  - url: https://api.football-management.com/v1
    description: Production server

components:
  schemas:
    Competition:
      type: object
      properties:
        name:
          type: string
        location:
          type: string
    Team:
      type: object
      properties:
        name:
          type: string
        slogan:
          type: string
        competitions:
          type: array
          items:
            $ref: '#/components/schemas/Competition'
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
    Player:
      type: object
      properties:
        name:
          type: string
        number:
          type: integer
        foot:
          type: string
          enum: [Left, Right]
    TeamList:
      type: object
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/Team'
        totalPages:
          type: integer
        currentPage:
          type: integer
        pageSize:
          type: integer
    PlayerList:
      type: object
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/Player'
        totalPages:
          type: integer
        currentPage:
          type: integer
        pageSize:
          type: integer

  parameters:
    PageParam:
      name: page
      in: query
      description: Page number for pagination.
      required: true
      schema:
        type: integer
    PageSizeParam:
      name: pageSize
      in: query
      description: Number of items per page.
      required: true
      schema:
        type: integer
    TeamNameParam:
      name: teamName
      in: query
      description: Filter teams by name.
      schema:
        type: string
    PlayerNameParam:
      name: playerName
      in: query
      description: Filter players by name.
      schema:
        type: string

paths:
  /competitions:
    get:
      summary: Get a list of competitions
      responses:
        '200':
          description: A list of competitions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Competition'
  /teams:
    get:
      summary: Get a list of teams
      parameters:
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/TeamNameParam'
      responses:
        '200':
          description: A paginated list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TeamList'
  /teams/{teamId}:
    get:
      summary: Get details of a specific team
      parameters:
        - name: teamId
          in: path
          description: ID of the team to retrieve
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Details of the team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
    put:
      summary: Update details of a specific team
      parameters:
        - name: teamId
          in: path
          description: ID of the team to update
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Team'
      responses:
        '200':
          description: Updated team details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
  /teams/{teamId}/players:
    get:
      summary: Get a list of players for a specific team
      parameters:
        - name: teamId
          in: path
          description: ID of the team
          required: true
          schema:
            type: string
        - $ref: '#/components/parameters/PageParam'
        - $ref: '#/components/parameters/PageSizeParam'
        - $ref: '#/components/parameters/PlayerNameParam'
      responses:
        '200':
          description: A paginated list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PlayerList'
  /teams/{teamId}/players/{playerId}:
    post:
      summary: Add a player to a team
      parameters:
        - name: teamId
          in: path
          description: ID of the team
          required: true
          schema:
            type: string
        - name: playerId
          in: path
          description: ID of the player to add
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player added to the team
    delete:
      summary: Remove a player from a team
      parameters:
        - name: teamId
          in: path
          description: ID of the team
          required: true
          schema:
            type: string
        - name: playerId
          in: path
          description: ID of the player to remove
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Player removed from the team
